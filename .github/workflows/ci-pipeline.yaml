name: CI

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build-and-test:
        name: build and test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install dependencies
              run: npm ci

            - name: Run eslint
              run: npm run lint

            - name: Test and Coverage
              run: npm run test
              env:
                  HOST: ${{ secrets.HOST }}
                  DB_NAME: ${{ secrets.DB_NAME }}
                  DB_USER: ${{ secrets.DB_USER }}
                  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
                  DB_HOST: ${{ secrets.DB_HOST }}
                  DB_PORT: ${{ secrets.DB_PORT }}
                  REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
                  EXPIRES_DATE_TOKEN: ${{ secrets.EXPIRES_DATE_TOKEN }}
                  ISSUER_TOKEN: ${{ secrets.ISSUER_TOKEN }}
                  JWKS_URI: ${{ secrets.JWKS_URI }}
                  BCRYPT_SALT: ${{ secrets.BCRYPT_SALT }}

            - name: Build TypeScript
              run: npm run build

            - name: SonarCloud Scan
              uses: sonarsource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    build-and-push-docker:
        name: Build and Push Docker Image
        needs: build-and-test
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: karanfullstack/auth-service-prodcution
            IMAGE_TAG: build-${{ github.run_number}}

        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build Docker image
              run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -f docker/production/Dockerfile .

            - name: Push Docker image
              run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
